<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slime_idlemove</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initial variables for enemy object
state = slime_states.idle;
image_speed = 0.1;
grav = 0.2;
hsp = 0; //horizontal speed
move = 0;
movespeed = 2;
dir = -1;
hsp_carry = 0; //Platform movespeed
vsp = 0; //vertical speed

shootTimer = 0;
chargeTimer = 0;
moveTimer = 0;
canAttack = 1;

counter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shootTimer++;
chargeTimer++;

switch(state){
    case slime_states.idle:
    {
        image_speed = 0.1; 
        move = 0;
        hsp = 0;
        vsp = vsp+grav;
        sprite_index = spr_slime_idlemove;
        
        if(distance_to_object(obj_player) &lt; 500) 
            state = slime_states.chase;
            
        break;
    }
    
    case slime_states.chase:
    {
        sprite_index = spr_slime_idlemove;
    
        image_speed = 0.1; 
    
        dir = sign(obj_player.x - x);   //Make enemy face player.
        move = dir * -1;
        image_xscale = move;
        hsp = dir * movespeed; //Movespeed of enemy
        vsp = vsp+grav;
        
        if((distance_to_object(obj_player) &lt; 400) &amp;&amp; (chargeTimer &gt; 120)){
            state = slime_states.charge;
            chargeTimer = 0; //reset charge cooldown
            }
        else if((distance_to_object(obj_player) &lt; 400) &amp;&amp; (shootTimer &gt; 120)){
            state = slime_states.attack;
            shootTimer = 0; //reset shoot cooldown
            }
        else if(distance_to_object(obj_player) &gt; 800)
            state = slime_states.idle;
        break;
    }
    
        case slime_states.charge:
    {
        sprite_index = spr_slime_charge;
        
        effect_create_below(ef_smoke, x, y+65, 1, c_gray);
        
        //dir = sign(obj_player.x - x);   //Make enemy face player.
        //move = dir * -1;
        image_xscale = move;
        
        if (counter == 30) //charge at player for a short time
        {
        state = slime_states.idle; 
        counter = 0;
        }
        else {
        hsp = dir * movespeed * 7; //charge player
        if(canAttack){
        with(instance_place(x,y, obj_player)){
            obj_player.hsp = 8* (facing * -1);
            obj_player.vsp = -3;
            state = states.take_damage; //Go into damage state
            obj_slime.canAttack = 0;
            obj_slime.alarm[0] = 60;
        }
    }
        counter++; 
        } 
        
        vsp = vsp+grav;
        break;
    }
    
    case slime_states.attack:
    {
        hsp = 0;
        
        image_speed = 0.3; //speed up animation for a quick attack
        
        sprite_index = spr_slime_atk;
        
        //Check animation frames to fire projectile
           
       if(image_index &gt; 8 &amp;&amp; image_index &lt;=8.30){
       
            audio_play_sound(snd_slime_shoot,0,0); //play shooting sound
            
            //effect_create_below(ef_smokeup, x, y, choose(0, 1, 2), c_blue);
            instance_create(x, y, obj_slime_projectile);
             
              
      }
      
        //image_speed = 0.1; //reset animation speed
        //state = slime_states.chase;
      
    }
}

scr_collideAndMove();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Enemy collision
if (place_meeting(x,y,obj_player))
{
if(obj_player.y &lt; y-66)
    {
    
       effect_create_above(ef_explosion, x, y, 1, c_lime);
        with(obj_player) vsp = -jumpspeed; //bounce when jumping on enemy
        
        audio_play_sound(snd_slime_injured,12,0);
        instance_destroy();
    }

    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hb_player_aa">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_punch_impact,10,0);
audio_play_sound(snd_slime_injured,10,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hb_player_la">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> audio_play_sound(snd_punch_impact,10,0);
 audio_play_sound(snd_slime_injured,11,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_slime_atk)
    state = slime_states.chase;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
